package graph;

import java.util.ArrayList;
import java.util.List;

/**
 * @author Lucas Su
 * @create 2023-09-22-12:57 - 15:24
 * https://myuni.adelaide.edu.au/courses/83025/files/13370035?module_item_id=3153554&fd_cookie_set=1
 */
public class TeamBuilder {
    static int[] specialLocations(String[] paths) {
        int[] res = new int[2];

        List<List<Integer>> crossList = new ArrayList<>();
        for (int i = 0; i < paths.length; i++) {
            bfs(paths, i, new ArrayList<>(), 0, res, crossList);
        }
        return res;
    }

    private static void bfs(String[] paths, int start, List<Integer> list, int layer, int[] res, List<List<Integer>> fullList) {
        if (list.isEmpty()) list.add(start);
        boolean flag = false;

        String str = paths[start];
        for (int i = 0; i < str.length(); i++) {

            if (str.charAt(i) == '1' && !list.contains(i)) {
                list.add(i);
                bfs(paths, i, list, layer + 1, res, fullList);
                if (list.size() == paths.length)
                    flag = true;
            }
        }
        if (layer == 0) {
            fullList.add(list);
            if (flag) res[0]++;
        }
        if (fullList.size() == paths.length) {
            boolean newFlag = true;
            List<Integer> currList = fullList.get(0);
            for (int i = 0; i < currList.size(); i++) {
                for (int j = 1; j < fullList.size(); j++)
                    if (!fullList.get(j).contains(currList.get(i)))
                        newFlag = false;
                if (newFlag) res[1]++;
                newFlag = true;
            }
        }
    }

    public static void main(String[] args) {
        String[][] testCases = {
                {"010", "000", "110"},
                {"0010", "1000", "1100", "1000"},
                {"01000", "00100", "00010", "00001", "10000"},
                {"0110000", "1000100", "0000001", "0010000", "0110000", "1000010", "0001000"},
                {}
        };

        for (String[] testCase : testCases) {
            int[] result = specialLocations(testCase);
            System.out.println(result[0] + " " + result[1]);
        }
    }
}
